Index: src/fr/istic/prg1/tree/Image.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.istic.prg1.tree;\r\n\r\nimport java.util.Scanner;\r\n\r\nimport fr.istic.prg1.tree_util.AbstractImage;\r\nimport fr.istic.prg1.tree_util.Iterator;\r\nimport fr.istic.prg1.tree_util.Node;\r\nimport fr.istic.prg1.tree_util.NodeType;\r\n\r\n/**\r\n * @author Mickaël Foursov <foursov@univ-rennes1.fr>\r\n * @version 5.0\r\n * @since 2023-09-23\r\n * \r\n *        Classe décrivant les images en noir et blanc de 256 sur 256 pixels\r\n *        sous forme d'arbres binaires.\r\n * \r\n */\r\n\r\npublic class Image extends AbstractImage {\r\n\tprivate static final Scanner standardInput = new Scanner(System.in);\r\n\r\n\tpublic Image() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic static void closeAll() {\r\n\t\tstandardInput.close();\r\n\t}\r\n\r\n\t/**\r\n\t * this devient identique à image2.\r\n\t *\r\n\t * @param image2 image à copier\r\n\t *\r\n\t * @pre !image2.isEmpty()\r\n\t */\r\n\t@Override\r\n\tpublic void affect(AbstractImage image2) {\r\n\t\tIterator<Node> it1 = this.iterator();// Il devrait manquer une ligne sinon erreur\r\n\t\tIterator<Node> it2 = image2.iterator();\r\n\t\taffectAux(it1,it2);\r\n\t}\r\n\r\n\tpublic void affectAux(Iterator<Node>it1,Iterator<Node>it2 ) {\r\n\t\tif (!it2.isEmpty()){\r\n\t\t\t// Traitement des cas\r\n\t\t\tNode node = it1.getValue();\r\n\t\t\tNode nodeImage = it2.getValue();\r\n\t\t\tif (it1.isEmpty() ){                // Cas 2 : si it1 est vide on affecte it2\r\n\t\t\t\tit1.addValue(nodeImage);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tit2.setValue(nodeImage);\r\n\t\t\t}\r\n\t\t\t// Parcours\r\n\t\t\tit1.goLeft();it2.goLeft();\r\n\t\t\taffectAux(it1,it2);\r\n\t\t\tit1.goUp();\tit2.goUp();\r\n\t\t\tit1.goRight();it2.goRight();\r\n\t\t\taffectAux(it1,it2);\r\n\t\t\tit1.goUp();it2.goUp();\r\n\t\t}\r\n\r\n\t\telse{\r\n\t\t\twhile(!it1.isEmpty())it1.remove();   //Cas 1 : Tant qu'il reste des valeurs dans l'arbre 1 on supprime\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * this devient rotation de image2 à 180 degrés.\r\n\t *\r\n\t * @param image2 image pour rotation\r\n\t * @pre !image2.isEmpty()\r\n\t */\r\n\t@Override\r\n\tpublic void rotate180(AbstractImage image2) {\r\n\t\tSystem.out.println();\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println(\"Fonction a ecrire\");\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println();\r\n\t}\r\n\r\n\t/**\r\n\t * this devient inverse vidéo de this, pixel par pixel.\r\n\t *\r\n\t * @pre !image.isEmpty()\r\n\t */\r\n\t@Override\r\n\tpublic void videoInverse() {\r\n\t\tIterator<Node> it = this.iterator();\r\n\t\tvideoInverseAux(it);\r\n\t}\r\n\tprivate void videoInverseAux(Iterator <Node> it) {\r\n\t\tif(! it.isEmpty()){\r\n\t\t\tif(it.nodeType() == NodeType.LEAF){\r\n\t\t\t\tNode currentNode = it.getValue();\r\n\t\t\t\tif(currentNode.state==1)it.setValue(Node.valueOf(0));\r\n\t\t\t\telse  it.setValue(Node.valueOf(1));\r\n\t\t\t}\r\n\t\t\tit.goLeft();\r\n\t\t\tvideoInverseAux(it);\r\n\t\t\tit.goUp();\r\n\t\t\tit.goRight();\r\n\t\t\tvideoInverseAux(it);\r\n\t\t\tit.goUp();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * this devient image miroir verticale de image2.\r\n\t *\r\n\t * @param image2 image à agrandir\r\n\t * @pre !image2.isEmpty()\r\n\t */\r\n\t@Override\r\n\tpublic void mirrorV(AbstractImage image2) {\r\n\t\tSystem.out.println();\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println(\"Fonction a ecrire\");\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println();\r\n\t}\r\n\r\n\t/**\r\n\t * this devient image miroir horizontale de image2.\r\n\t *\r\n\t * @param image2 image à agrandir\r\n\t * @pre !image2.isEmpty()\r\n\t */\r\n\t@Override\r\n\tpublic void mirrorH(AbstractImage image2) {\r\n\t\tSystem.out.println();\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println(\"Fonction a ecrire\");\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println();\r\n\t}\r\n\r\n\t/**\r\n\t * this devient quart supérieur gauche de image2.\r\n\t *\r\n\t * @param image2 image à agrandir\r\n\t * \r\n\t * @pre !image2.isEmpty()\r\n\t */\r\n\t@Override\r\n\tpublic void zoomIn(AbstractImage image2) {\r\n\t\tSystem.out.println();\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println(\"Fonction a ecrire\");\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println();\r\n\t}\r\n\r\n\t/**\r\n\t * Le quart supérieur gauche de this devient image2, le reste de this devient\r\n\t * éteint.\r\n\t * \r\n\t * @param image2 image à réduire\r\n\t * @pre !image2.isEmpty()\r\n\t */\r\n\t@Override\r\n\tpublic void zoomOut(AbstractImage image2) {\r\n\t\tSystem.out.println();\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println(\"Fonction a ecrire\");\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println();\r\n\t}\r\n\r\n\t/**\r\n\t * this devient l'intersection de image1 et image2 au sens des pixels allumés.\r\n\t * \r\n\t * @pre !image1.isEmpty() && !image2.isEmpty()\r\n\t * \r\n\t * @param image1 premiere image\r\n\t * @param image2 seconde image\r\n\t */\r\n\t@Override\r\n\tpublic void intersection(AbstractImage image1, AbstractImage image2) {\r\n\t\tSystem.out.println();\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println(\"Fonction a ecrire\");\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println();\r\n\t}\r\n\r\n\t/**\r\n\t * this devient l'union de image1 et image2 au sens des pixels allumés.\r\n\t * \r\n\t * @pre !image1.isEmpty() && !image2.isEmpty()\r\n\t * \r\n\t * @param image1 premiere image\r\n\t * @param image2 seconde image\r\n\t */\r\n\t@Override\r\n\tpublic void union(AbstractImage image1, AbstractImage image2) {\r\n\t\tSystem.out.println();\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println(\"Fonction a ecrire\");\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println();\r\n\t}\r\n\r\n\t/**\r\n\t * Attention : cette fonction ne doit pas utiliser la commande isPixelOn\r\n\t * \r\n\t * @return true si tous les points de la forme (x, x) (avec 0 \u0014<= x <=\u0014 255)\r\n\t *         sont allumés dans this, false sinon\r\n\t */\r\n\t@Override\r\n\tpublic boolean testDiagonal() {\r\n\t\tSystem.out.println();\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println(\"Fonction a ecrire\");\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println();\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param x abscisse du point\r\n\t * @param y ordonnée du point\r\n\t * @pre !this.isEmpty()\r\n\t * @return true, si le point (x, y) est allumé dans this, false sinon\r\n\t */\r\n\t@Override\r\n\tpublic boolean isPixelOn(int x, int y) {\r\n\t\tSystem.out.println();\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println(\"Fonction a ecrire\");\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println();\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param x1 abscisse du premier point\r\n\t * @param y1 ordonnée du premier point\r\n\t * @param x2 abscisse du deuxième point\r\n\t * @param y2 ordonnée du deuxième point\r\n\t * @pre !this.isEmpty()\r\n\t * @return true si les deux points (x1, y1) et (x2, y2) sont représentés par la\r\n\t *         même feuille de this, false sinon\r\n\t */\r\n\t@Override\r\n\tpublic boolean sameLeaf(int x1, int y1, int x2, int y2) {\r\n\t\tSystem.out.println();\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println(\"Fonction a ecrire\");\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println();\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param image2 autre image\r\n\t * @pre !this.isEmpty() && !image2.isEmpty()\r\n\t * @return true si this est incluse dans image2 au sens des pixels allumés false\r\n\t *         sinon\r\n\t */\r\n\t@Override\r\n\tpublic boolean isIncludedIn(AbstractImage image2) {\r\n\t\tSystem.out.println();\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println(\"Fonction a ecrire\");\r\n\t\tSystem.out.println(\"-------------------------------------------------\");\r\n\t\tSystem.out.println();\r\n\t\treturn false;\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/fr/istic/prg1/tree/Image.java b/src/fr/istic/prg1/tree/Image.java
--- a/src/fr/istic/prg1/tree/Image.java	(revision f328d32da9acaf30238906a728e95e78e2640b45)
+++ b/src/fr/istic/prg1/tree/Image.java	(date 1732699962072)
@@ -37,22 +37,17 @@
 	 */
 	@Override
 	public void affect(AbstractImage image2) {
-		Iterator<Node> it1 = this.iterator();// Il devrait manquer une ligne sinon erreur
+		Iterator<Node> it1 = this.iterator();//
+		it1.clear();// Il devrait manquer une ligne sinon erreur
 		Iterator<Node> it2 = image2.iterator();
 		affectAux(it1,it2);
 	}
 
 	public void affectAux(Iterator<Node>it1,Iterator<Node>it2 ) {
 		if (!it2.isEmpty()){
-			// Traitement des cas
-			Node node = it1.getValue();
 			Node nodeImage = it2.getValue();
-			if (it1.isEmpty() ){                // Cas 2 : si it1 est vide on affecte it2
-				it1.addValue(nodeImage);
-			}
-			else {
-				it2.setValue(nodeImage);
-			}
+			it1.addValue(nodeImage);
+
 			// Parcours
 			it1.goLeft();it2.goLeft();
 			affectAux(it1,it2);
@@ -61,10 +56,6 @@
 			affectAux(it1,it2);
 			it1.goUp();it2.goUp();
 		}
-
-		else{
-			while(!it1.isEmpty())it1.remove();   //Cas 1 : Tant qu'il reste des valeurs dans l'arbre 1 on supprime
-		}
 	}
 
 	/**
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f0c26038-dbb5-42fc-9eee-390ca6772237\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/fr/istic/prg1/tree/Image.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/fr/istic/prg1/tree/Image.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;ntombeze&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/MelenL/PRG-TP6.git&quot;,\r\n    &quot;accountId&quot;: &quot;c063a956-bc94-4fe0-b778-64de56c0e350&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2p6i4xKmNjsIQuymJxP3CamCWR0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.TpArbre.executor&quot;: &quot;Run&quot;,\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\r\n    &quot;JUnit.TestImage.executor&quot;: &quot;Run&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;noah&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23339.11\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23339.11\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f0c26038-dbb5-42fc-9eee-390ca6772237\" name=\"Changes\" comment=\"\" />\r\n      <created>1732092739434</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1732092739434</updated>\r\n      <workItem from=\"1732092740279\" duration=\"1000\" />\r\n      <workItem from=\"1732093224263\" duration=\"2194000\" />\r\n      <workItem from=\"1732185482308\" duration=\"2157000\" />\r\n      <workItem from=\"1732198099719\" duration=\"1272000\" />\r\n      <workItem from=\"1732547137003\" duration=\"2801000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f328d32da9acaf30238906a728e95e78e2640b45)
+++ b/.idea/workspace.xml	(date 1732698741877)
@@ -81,7 +81,8 @@
       <workItem from="1732093224263" duration="2194000" />
       <workItem from="1732185482308" duration="2157000" />
       <workItem from="1732198099719" duration="1272000" />
-      <workItem from="1732547137003" duration="2801000" />
+      <workItem from="1732547137003" duration="3160000" />
+      <workItem from="1732697014913" duration="1714000" />
     </task>
     <servers />
   </component>
